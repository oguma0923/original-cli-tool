require 'rails_helper'

RSpec.describe '<%= @controller_name.camelize.pluralize %>', type: :request do
  let(:<%= @controller_name %>) { FactoryBot.create(:<%= @controller_name %>) }
  let(:new_<%= @controller_name %>) { FactoryBot.attributes_for(:<%= @controller_name %>) }
  let(:edited_<%= @controller_name %>) { FactoryBot.attributes_for(:<%= @controller_name %>, :edit) }

  describe 'GET /<%= @controller_name.pluralize %>' do
    it 'レスポンスが正常であること' do
      get <%= @controller_name.pluralize %>_path
      expect(response).to have_http_status :ok
    end
  end

  describe 'GET /<%= @controller_name.pluralize %>/:id' do
    it 'レスポンスが正常であること' do
      get <%= @controller_name.pluralize %>_path(user)
      expect(response).to have_http_status :ok
    end
  end

  describe 'GET /<%= @controller_name.pluralize %>/new' do
    it 'レスポンスが正常であること' do
      get new_user_path
      expect(response).to have_http_status :ok
    end
  end

  describe 'GET /<%= @controller_name.pluralize %>/:id/edit' do
    it 'レスポンスが正常であること' do
      get edit_user_path(user)
      expect(response).to have_http_status :ok
    end
  end

  describe 'POST /<%= @controller_name.pluralize %>' do
    it '新規ユーザのページにリダイレクトされること' do
      post <%= @controller_name.pluralize %>_path, params: { user: new_user }
      expect(response).to redirect_to user_path(User.last)
    end
  end

  describe 'PATCH/PUT /<%= @controller_name.pluralize %>/:id' do
    it 'ユーザ情報の更新ができること' do
      patch user_path(user), params: { user: edited_user }
      expect(user.reload.name).to eq edited_user[:name]
    end
  end

  describe 'DELETE /<%= @controller_name.pluralize %>/:id' do
    it 'ユーザ情報を削除できること' do
      delete user_path(user)
      expect(subject).to redirect_to <%= @controller_name.pluralize %>_path
    end
  end
end
